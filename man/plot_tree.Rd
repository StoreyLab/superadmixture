% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_tree.R
\name{plot_tree}
\alias{plot_tree}
\title{Visualize the coancestry among antecedent populations as a phylogenetic tree}
\usage{
plot_tree(tr, tip_label = "S", font_size = 14, colors = NULL)
}
\arguments{
\item{tr}{A phylo object from the \code{ape} package.}

\item{tip_label}{An optional string of prefix of the tip label (default to "S").}

\item{font_size}{An optional float number of font size in pt (default to 14).}

\item{colors}{An optional named vector of Hex color codes. The names of the vector should have a one-to-one correspondence to the tip labels of \code{tr}. The values of the vector encoding the colors will be used to plot the tree labels. If no \code{colors} is provided, this function will return an uncolorred tree.}
}
\value{
A ggplot object of the phylogenetic tree.
}
\description{
\code{plot_tree()} serves as a wrapper function for the \code{\link[ggtree]{ggtree}} function from the ggtree package. The user can use this function to visualize the estimated coancestry matrix \eqn{\Lambda} as a phylogenetic tree.
}
\note{
This function depends on the Bioconductor packages \code{treeio} and \code{ggtree}. To run this function, the user should install \code{treeio} and \code{ggtree} packages mannually.

\if{html}{\out{<div class="sourceCode">}}\preformatted{if (!require("BiocManager", quietly = TRUE))
      install.packages("BiocManager")
 BiocManager::install("ggtree")
 BiocManager::install("treeio")
}\if{html}{\out{</div>}}
}
\examples{
## Visualizing the coancestry of HGDP data ----------------------------------------
data("coanc_pops_hgdp", package = "superadmixture")

## order in the ascending order of coancestry
index <- order(diag(coanc_pops_hgdp))
coanc_pops_hgdp <- coanc_pops_hgdp[index, index]

# label antecedent populations
colnames(coanc_pops_hgdp) <- rownames(coanc_pops_hgdp) <- paste0("S", 1:7)

## fit tree
tree <- bnpsd::fit_tree(coanc_pops_hgdp)

## plot an uncolorred tree
plot_tree(tree, font_size = 15)

## Based on the topology of the tree presented in the previous code chunk,
## we decide to color the populations S1, S2 by light blue and dark blue,
## S3, S4 as light green and dark green, S5, S6 as light red and dark red,
## and the rest with purple (see vignette). We can pick a sequence of colors
## by using the `get_seq_colors()` function and its returned value can be used
## to specify the coloring scheme for `plot_tree()` function.
colors <- c(get_seq_colors("Blues", 2),
            get_seq_colors("Greens", 2),
            get_seq_colors("Reds", 2),
            get_seq_colors("Purples", 1))
names(colors) <- paste0("S", c(1:4, 5, 6, 7))
plot_tree(tree, colors = colors, font_size = 15)
}
