% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/barplot_admix.R
\name{barplot_admix}
\alias{barplot_admix}
\title{Visualize admixture proportions of each individual}
\usage{
barplot_admix(
  admix_props,
  colors = NULL,
  subpops = NULL,
  indiv_on_cols = TRUE,
  base_size = 14
)
}
\arguments{
\item{admix_props}{A matrix of admixture proportions. The dimension of \code{admix_props} can be \eqn{K} (number of antecedent populations) \eqn{\times} \eqn{n} (number of individuals) or \eqn{n \times K}. Set \code{indiv_on_cols} to be \code{FALSE} if the dimension of \code{admix_props} is \eqn{n \times K}.}

\item{colors}{An optional vector of Hex color codes. The length of \code{colors} should be equal to \eqn{K}. Each hex color will be used to plot the corresponding antecedent populations. If no \code{colors} is provided, this function will use the Accent palette as default.}

\item{subpops}{An optional vector of strings each representing population label of the corresponding individual. If \code{subpops} is set, \code{admix_props} should be arranged in a way that individuals from the same population are grouped together. For example, \code{admix_props} has 7 individuals, two from "S1", two from "S2", the rest from "S3", then \code{subpops} can be \code{c("S1", "S1", "S2", "S2", "S3", "S3", "S3")}.}

\item{indiv_on_cols}{An optional boolean that specifies the dimension of the input \code{admix_props}. If \code{FALSE}, \code{admix_props} has individuals on rows and populations on cols; if \code{TRUE} (default), populations are on rows and individuals on columns.}

\item{base_size}{An optional integer of base font size for \code{\link[ggplot2]{geom_bar}} (default = 14).}
}
\value{
A ggplot object
}
\description{
\code{barplot_admix()} serves as a wrapper function for the
\code{\link[ggplot2]{geom_bar}} function from the ggplot2 package
to visualize the admixture proportion.
}
\examples{
## Visualizing admixture proportions of HGDP data ----------------------------------------

## load admixture proportions, population-level coancestry and FAM data
data("coanc_pops_hgdp",  package = "superadmixture")
data("admix_props_hgdp", package = "superadmixture")
data("fam_hgdp", package = "superadmixture")

## order in the ascending order of coancestry
index <- order(diag(coanc_pops_hgdp))
admix_props_hgdp <- admix_props_hgdp[index, ]

## Based on the topology of the tree presented in the previous code chunk,
## we decide to color the populations S1, S2 by light blue and dark blue,
## S3, S4 as light green and dark green, S5, S6 as light red and dark red,
## and the rest with purple (see vignette). We can pick a sequence of colors
## by using the `get_seq_colors()` function and its returned value can be used
## to specify the coloring scheme for `plot_tree()` function.
colors <- c(get_seq_colors("Blues", 2),
            get_seq_colors("Greens", 2),
            get_seq_colors("Reds", 2),
            get_seq_colors("Purples", 1))
names(colors) <- paste0("S", 1:7)

## plot admixture proportions without population labels
barplot_admix(admix_props_hgdp, colors = colors, indiv_on_cols = TRUE)

## plot admixture proportions with population labels
barplot_admix(admix_props_hgdp, colors = colors, subpops = fam_hgdp$subpop, indiv_on_cols = TRUE)
}
